# This playbook does all provisioning of the machines
# It performs OS configuration, installs docker and the kubernetes binaries kubectl, kubelet and kubeadm
# It also performs a check of the current host cluster state (init/join)
# It runs kubeclt for
#   - init a new cluster (is setup_create_new_k8s_cluster is set)
#   - join other nodes to the cluster
---
- import_playbook: ./utils.yml

# all linux hosts need the 'lnxutils' role
- hosts: lnxclp:lnxwrk
  roles:
    - lnxutils

# add setup role to all linux hosts, if not disabled by 'setup_skip_system_setup'
- hosts: lnxclp:lnxwrk
  tasks:
    - import_role: name=lnxsetup
      when: setup_skip_system_setup == false

# run individual setup for workers and clp
- hosts: lnxclp
  roles:
    - lnxclp

- hosts: lnxwrk
  roles:
    - lnxwrk

- hosts: winwrk
  tasks:
    - import_role: name=winsetup
      when: setup_skip_system_setup == false

# check if cluster-state of the lnxclp-master
- hosts: lnxclp-master
  tasks:
    - import_role: name=k8sclusterstate

    # fail if the master node is not configured, and no cluster setup should be performed
    - fail:
        msg: "Kubernetes is not configured on {{ansible_hostname}}, and 'setup_create_new_k8s_cluster' is false."
      when: k8s_configured == false and setup_create_new_k8s_cluster == false

    # if the master is not initialized, do this first
    - include_role: 
        name: k8sclusterinit
      when: k8s_configured == false

# check cluster status for all lnxwrk hosts
- hosts: lnxwrk
  tasks:
    - import_role: name=k8sclusterstate


# apply lnxwrk-new role to unconfigured linux workers
- hosts: lnxwrk
  tasks:
    - include_role:
        name: lnxwrk-new
      when: k8s_configured == false



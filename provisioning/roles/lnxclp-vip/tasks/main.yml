###########################################
## This is the role inits the VIP needed for the APISERVER
##
## It is dynamically included by hostplaybook.yml
- name: Install keepalived package
  yum:
    name: keepalived, ipvsadm, haproxy

- name: keepalived sysctl
  sysctl:
    name: net.ipv4.ip_nonlocal_bind
    value: 1
    ignoreerrors: yes # otherwise it tries to stat /proc/sys/bridge-nf-call-ip6tables
    state: present

- name: keepalived sysctl
  sysctl:
    name: net.ipv4.conf.all.arp_ignore
    value: 3
    ignoreerrors: yes # otherwise it tries to stat /proc/sys/bridge-nf-call-ip6tables
    state: present

- name: keepalived sysctl
  sysctl:
    name: net.ipv4.conf.all.arp_announce
    value: 2
    ignoreerrors: yes # otherwise it tries to stat /proc/sys/bridge-nf-call-ip6tables
    state: present

- name: keepalived sysctl
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    ignoreerrors: yes # otherwise it tries to stat /proc/sys/bridge-nf-call-ip6tables
    state: present

- name: touch /etc/sysconfig/ipvsadm 
  command: touch /etc/sysconfig/ipvsadm 
  changed_when: false

- name: Set fw rich rule
  firewalld:
    rich_rule: rule protocol value="vrrp" accept
    permanent: yes
    immediate: yes
    state: enabled
  notify: reload firewalld

- name: Enable and start ipvsadm
  service:
    name: ipvsadm
    enabled: yes
    state: started

- name: "sync /etc/keepalived/keepalived.conf"
  template:
    src: keepalived.conf
    dest: /etc/keepalived/keepalived.conf
  register: keepalived_conf

- name: Enable and start keepalived
  service:
    name: keepalived
    enabled: yes
    state: "{{ 'restarted' if keepalived_conf.changed else 'started' }}"

- name: Set selinux keepalived_connect_any flag on and keep it persistent across reboots
  seboolean:
    name: keepalived_connect_any
    state: yes
    persistent: yes

- name: "sync /etc/haproxy/haproxy.cfg"
  template:
    src: haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg
  register: haproxy_conf

- name: Enable and start haproxy
  service:
    name: haproxy
    enabled: yes
    state: "{{ 'restarted' if haproxy_conf.changed else 'started' }}"

- name: Set selinux haproxy_connect_any flag on and keep it persistent across reboots
  seboolean:
    name: haproxy_connect_any
    state: yes
    persistent: yes

- name: Wait for VIP to become up (ping {{k8s_api_server_vip}})
  shell: "ping {{k8s_api_server_vip}} -c 10"
  changed_when: false
  retries: 5
  delay: 1

- name: Wait for VIP to accept connections on {{k8s_api_server_vip}}:{{k8s_apiserver_port}}
  wait_for:
    host: "{{k8s_api_server_vip}}"
    port: {{k8s_apiserver_port}}
  retries: 5
  delay: 1
  when: keepalived_enable_check == true


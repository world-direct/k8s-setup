# This playbook does all provisioning of the machines
# It performs OS configuration, installs docker and the kubernetes binaries kubectl, kubelet and kubeadm
# It also performs a check of the current host cluster state (init/join)
# It runs kubeclt for
#   - init a new cluster (is setup_create_new_k8s_cluster is set)
#   - join other nodes to the cluster
---

# common tasks for all control plane nodes
- hosts: lnxclp:lnxwrk
  roles:
    - lnxkubeadm-common

# check if cluster-state of the lnxclp_setup
- hosts: lnxclp_setup
  tasks:

    - block: 

      # fail if the master node is not configured, and no cluster setup should be performed
      - fail:
          msg: "Kubernetes is not configured on {{ansible_hostname}}, and 'setup_create_new_k8s_cluster' is false."
        when: setup_create_new_k8s_cluster == false

      # add the lnxclp-vip to the setup node first
      - include_role:
          name: lnxclp-vip
        vars:
          vip_enable_tcp_check: no

      # if the master is not initialized, do this first
      - include_role: 
          name: lnxclp-first

      - set_fact:
          k8s_configured: yes
      
      when: k8s_configured == false

# apply lnxclp-new role to unconfigured linux control plane nodes
- hosts: lnxclp
  tasks:
    - include_role:
        name: lnxclp-new
      when: k8s_configured == false

# apply lnxwrk-new role to unconfigured linux workers
- hosts: lnxwrk
  tasks:
    - include_role:
        name: lnxwrk-new
      when: k8s_configured == false

# add the lnxclp-vip to all lnxclp nodex, with the check enabled (see keepalived.conf)
# this will update the configuration of all clp nodes
# It is important, that this runs **after** all nodes have joined!
# Otherwise, you will get connection-issues
- hosts: lnxclp
  tasks:
    - name: "Run role 'lnxclp-vip' for all clp nodes"
      include_role:
        name: lnxclp-vip
      vars:
        vip_enable_tcp_check: yes
